TODO:
-----

Release 0.1.1:
- Import Key from Clipboard <DONE>
- Import-Key Dialog connected with Import-Key Button (like kgpg) <DONE>
- Sort Keys (QListView -> TableView)
- find start of GPG-Block and insert "\n" if needed, to prevent "No Data" error <DONE>
- Mac Build
- decide, which glibc-version to support on linux, prevent newer dependencies
  --> decision done, support from debian Sarge (released jun. 2005) 
onwards


Later:

- Binary File Attachements, function for Decrypt & Help-Text (like safe eml, etc)
- add a button to open Keytable ( now you have to restart, if accidently closed the keytable ).
- add a message-box with warning if someone's adding a secret-key to usb-keyring
- sorting keys would be nice (e.g. a-z or complete manual)
--> show all email-Adresses connected to a key
- Policy ( dialogs, what's warning, what an error )
- adding signing and clearsigning text messages and verifying signatures (thx, Yucca)
- Encrypt to self (problem: who is self?)
- on windows an empty directory gnupg in application-data is created, find out
how to disable
- Open File from command Line 

- More Keymanagement (new popup window?) including:
   - copy a public-keyfile into the editor-window and enable importing it -> same as "Import Key from Clipboard?"
    - export public key
    - export private key
    - generate new key
    - import keyfiles in non ASCII-Amor-format (always and everywhere error-free keyimport would be great)
    - Import key from Keyserver

- Tabbed editor (including useful things like encrypted data opens in new tab)

- some kind of locking for keydb, as gpg.conf uses lock-never, for ability to run on usb-drives (fat-formatted)

usability:
- dialog on closing unsaved document (discard/cancel/save) is not very user-friendly

advanced:
- threading & thread-safety in context.cpp (in, out, ctx)

---
Use QStringList instead of QList<String>
